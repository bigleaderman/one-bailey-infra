apiVersion: v1
kind: Secret
metadata:
  name: redis-commander-basic-auth
  namespace: data-pipeline
type: Opaque
stringData:
  HTTP_USER: "admin"
  HTTP_PASSWORD: "change-this-ui-pass"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander
  namespace: data-pipeline
  labels:
    app: redis-commander
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-commander
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      nodeSelector:
        node-role.kubernetes.io/analytics-node: "true"  # UI는 worker-02에 배치 권장(여유자원)
      containers:
        - name: redis-commander
          image: ghcr.io/joeferner/redis-commander:latest
          env:
            - name: REDIS_HOSTS
              value: "local:redis:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-auth
                  key: REDIS_PASSWORD
            - name: HTTP_USER
              valueFrom:
                secretKeyRef:
                  name: redis-commander-basic-auth
                  key: HTTP_USER
            - name: HTTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-commander-basic-auth
                  key: HTTP_PASSWORD
          ports:
            - name: http
              containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: redis-commander
  namespace: data-pipeline
spec:
  type: ClusterIP
  selector:
    app: redis-commander
  ports:
    - name: http
      port: 8081
      targetPort: 8081
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: onebailey-shop-tls-dp
  namespace: data-pipeline
spec:
  secretName: onebailey-shop-tls-dp
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
  dnsNames:
    - onebailey.shop
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redis-commander-ingress
  namespace: data-pipeline
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx
  tls:
    - hosts: ["onebailey.shop"]
      secretName: onebailey-shop-tls-dp
  rules:
    - host: onebailey.shop
      http:
        paths:
          - path: /redis(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: redis-commander
                port:
                  number: 8081

