global:
  domain: onebailey.shop # 공통 도메인 설정
  logging:
    format: json         # 로그 포맷 설정 (json 형식)

controller:
  replicas: 1
  nodeSelector:
    node-role.kubernetes.io/storage-node: "true"  # 스토리지 노드에 배치
  resources:
    requests:
      cpu: 300m
      memory: 512Mi
    limits:
      cpu: 600m
      memory: 1Gi
server:
  nodeSelector:
    node-role.kubernetes.io/storage-node: "true"
  volumes:
    - name: argocd-storage
      persistentVolumeClaim:
        claimName: argocd-pvc # ArgoCD 서버 설정이 저장될 PVC
  volumeMounts:
    - mountPath: /app/config
      name: argocd-storage
  extraArgs:
    - --basehref=/argocd  # ArgoCD UI 경로 베이스 설정 (Ingress용)
    - --rootpath=/argocd  # 동일한 목적

  # 리소스 요청/제한 (애플리케이션 20개 기준)
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

repoServer:
  nodeSelector:
    node-role.kubernetes.io/storage-node: "true"
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

applicationSet:
  nodeSelector:
    node-role.kubernetes.io/storage-node: "true"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi

notifications:
  nodeSelector:
    node-role.kubernetes.io/storage-node: "true"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 250m
      memory: 256Mi

redis:
  nodeSelector:
    node-role.kubernetes.io/storage-node: "true"
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi

dex:
  enabled: false  # Dex 인증 비활성화 (LDAP, SSO 등을 쓰지 않을 경우)

configs:
  params:
    server.insecure: true  # SSL 종료를 Ingress에서 처리하므로 ArgoCD는 HTTP로 운영

